<project name="freecast" default="test" basedir=".">

	<property file="build-user.properties" />
	<property file="build.properties" />

  <target name="prepare.libraries">
  	<path id="path.build">
  		<fileset dir="lib/core"/>
  	</path>
  	<path id="path.runtime">
  		<fileset dir="lib/runtime"/>
  		<path refid="path.build"/>
  	</path>
  	<path id="path.test">
  		<fileset dir="lib/test"/>
  		<path refid="path.runtime"/>
  	</path>
  </target>
  
	<target name="clean">
		<delete dir="build" />
		<delete dir="dist" />
	</target>

	<target name="build.core" depends="prepare.libraries, build.core.classes, build.core.resources" />

	<target name="build.core.classes">
		<mkdir dir="${build.core.classes.dir}" />
		<javac target="1.4" source="1.4" srcdir="source" destdir="${build.core.classes.dir}" debug="true">
			<classpath refid="path.build" />
			<exclude name="**/test/*.java" />
		</javac>
	</target>

	<target name="build.core.resources">
		<copy todir="${build.core.classes.dir}">
			<fileset dir="source">
				<include name="**/resources/*" />
				<exclude name="**/*.xcf" />
				<exclude name="**/test/**" />
				<exclude name="org/kolaka/freecast/node/swing/resources/freecast-splash.jpg" />
			</fileset>
		</copy>

		<mkdir dir="build/core/version" />
		<mkdir dir="${build.core.classes.dir}/org/kolaka/freecast/resources" />

		<echo file="build/core/version/version.properties" message="name=${project.version}" />
		<copy todir="${build.core.classes.dir}/org/kolaka/freecast/resources">
			<fileset dir="build/core/version">
				<different targetdir="${build.core.classes.dir}/org/kolaka/freecast/resources" />
			</fileset>
		</copy>

		<copy todir="${build.core.classes.dir}/org/kolaka/freecast/manager/http/resources/data" flatten="true">
			<fileset dir="source/org/kolaka/freecast/www">
				<include name="images/header/freecast.png" />
				<include name="css/start.css" />
				<include name="css/screen.css" />
			</fileset>
		</copy>
	</target>

	<target name="build.etc">
		<mkdir dir="build/etc/console-only" />
		<style in="source/org/kolaka/freecast/log4j.xml" out="build/etc/console-only/log4j.xml" style="source/org/kolaka/freecast/log4j.xsl">
			<param name="file" expression="false" />
		</style>
		<mkdir dir="build/etc/complete" />
		<style in="source/org/kolaka/freecast/log4j.xml" out="build/etc/complete/log4j.xml" style="source/org/kolaka/freecast/log4j.xsl">
			<param name="file" expression="true" />
		</style>
	</target>

	<target name="build.test" depends="build.core, build.etc">
		<property name="build.test.classes.dir" value="build/test/classes" />
		<mkdir dir="${build.test.classes.dir}" />
		<javac srcdir="source" destdir="${build.test.classes.dir}" debug="true">
			<classpath refid="path.test" />
			<include name="**/test/*.java" />
		</javac>
		<copy file="source/org/kolaka/freecast/test/log4j.xml" tofile="${build.test.classes.dir}/log4j.xml" />
		<copy todir="${build.test.classes.dir}">
			<fileset dir="source">
				<include name="**/test/resources/*" />
			</fileset>
		</copy>
	</target>

	<target name="build" depends="build.core" />

	<target name="test" depends="build.test" description="Run the unit tests">
		<property name="build.test.results.dir" value="build/test/results" />
		<mkdir dir="${build.test.results.dir}" />
		<property name="test.haltonfailure" value="true" />
		<junit printsummary="yes" haltonfailure="${test.haltonfailure}" includeantruntime="yes" fork="yes">
			<formatter type="plain" />
			<batchtest todir="${build.test.results.dir}">
				<fileset dir="source">
					<include name="**/test/*Test.java" />
					<include name="**/test/*TestSuite.java" />
					<exclude name="**/test/*BaseTest.java" />
				</fileset>
			</batchtest>
			<classpath>
				<pathelement path="build/core/classes" />
				<pathelement path="build/test/classes" />
				<path refid="path.test" />
			</classpath>
			<sysproperty key="java.library.path" path="${track.tritonus.dir}" />
		</junit>
	</target>

	<target name="dist" depends="build, dist.jar, dist.bin, dist.etc, dist.lib" description="Create the binaries distribution" />

	<target name="dist.jar">
		<mkdir dir="dist/lib" />
		<jar jarfile="dist/lib/freecast.jar">
			<fileset dir="${build.core.classes.dir}" />
		</jar>
	</target>

	<target name="dist.bin">
		<macrodef name="binscript">
			<attribute name="name"/>
			<attribute name="mainclass"/>
			<sequential>
				<filterset id="binscript.@{application}">
					<filter token="app.name" value="@{name}" />
					<filter token="app.mainclass" value="@{mainclass}" />
				</filterset>
				<copy tofile="dist/bin/@{name}" file="source/org/kolaka/freecast/freecast-template.sh">
					<filterset refid="binscript.@{application}"/>
				</copy>
				<copy tofile="dist/bin/@{name}.bat" file="source/org/kolaka/freecast/freecast-template.bat">
					<filterset refid="binscript.@{application}"/>
				</copy>
			</sequential>
		</macrodef>
		
		<binscript name="freecast" mainclass="org.kolaka.freecast.node.cli.Main"/>
		<binscript name="freecast-tracker" mainclass="org.kolaka.freecast.tracker.Main"/>
		<binscript name="freecast-swing" mainclass="org.kolaka.freecast.node.swing.Main"/>
		<binscript name="freecast-keygenerator" mainclass="org.kolaka.freecast.packet.signer.Main"/>
		<binscript name="freecast-manager" mainclass="org.kolaka.freecast.manager.gui.Main"/>
		<binscript name="freecast-setup" mainclass="org.kolaka.freecast.setup.Main"/>

		<copy todir="dist/bin" file="source/org/kolaka/freecast/classpath.bat" />

		<chmod perm="+x">
			<fileset dir="dist/bin">
				<include name="freecast*" />
				<exclude name="*.bat" />
			</fileset>
		</chmod>
	</target>

	<target name="dist.etc" depends="build.etc">
	  <mkdir dir="dist/etc"/>
	  <!-- TODO restore tidy processing -->
	  <copy todir="dist/etc">
		  <fileset dir="build/etc/complete" />
	  </copy>
	</target>

	<target name="dist.lib">
		<copy todir="dist/lib">
			<fileset dir="lib/core"/>
			<fileset dir="lib/runtime">
				 <include name="*.jar"/>
				 <exclude name="jdic-stub*"/>
				 <exclude name="jdic-native*"/>
			</fileset>
		</copy>
	</target>
	
</project>
